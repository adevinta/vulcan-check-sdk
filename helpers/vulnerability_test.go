/*
Copyright 2021 Adevinta
*/

package helpers

import (
	"testing"
)

func TestVulnerability_ComputeFingerprint(t *testing.T) {
	tests := []struct {
		name            string
		fingerprintArgs []string
		want            string
	}{
		{
			name:            "HappyPath",
			fingerprintArgs: []string{"default"},
			want:            "97c89b0213036ce5ac0958f2a68970b13c132c39382e86cd4060d8423c86276b",
		},
		{
			name:            "NilFingerprintArguments",
			fingerprintArgs: nil,
			want:            "4f53cda18c2baa0c0354bb5f9a3ecbe5ed12ab4d8e11ba873c2f11161202b945",
		},
		{
			name:            "EmptyFingerprintArguments",
			fingerprintArgs: []string{""},
			want:            "4f53cda18c2baa0c0354bb5f9a3ecbe5ed12ab4d8e11ba873c2f11161202b945",
		},
	}
	for _, tt := range tests {
		tt := tt
		t.Run(tt.name, func(t *testing.T) {
			got := ComputeFingerprint(tt.fingerprintArgs)
			if got != tt.want {
				t.Errorf("ComputeFingerprint.IsScannable() = %v, want %v", got, tt.want)
			}
		})
	}
}
