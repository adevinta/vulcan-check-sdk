/*
Copyright 2021 Adevinta
*/

package helpers

import (
	"testing"
)

func TestVulnerability_ComputeFingerprint(t *testing.T) {
	tests := []struct {
		name            string
		fingerprintArgs []string
		want            string
	}{
		{
			name:            "HappyPath",
			fingerprintArgs: []string{"default"},
			want:            "938976c28e9d6667eda59fe10e2a24e9b6217ea3ad52b4184a42cbd922885993",
		},
		{
			name:            "NilFingerprintArguments",
			fingerprintArgs: nil,
			want:            "08d10f89625344ea9c85d6d6353ff8d2902075fb32412cd72f8bf3ec18b8bbc4",
		},
		{
			name:            "EmptyFingerprintArguments",
			fingerprintArgs: []string{""},
			want:            "08d10f89625344ea9c85d6d6353ff8d2902075fb32412cd72f8bf3ec18b8bbc4",
		},
	}
	for _, tt := range tests {
		tt := tt
		t.Run(tt.name, func(t *testing.T) {
			got := ComputeFingerprint(tt.fingerprintArgs)
			if got != tt.want {
				t.Errorf("ComputeFingerprint.IsScannable() = %v, want %v", got, tt.want)
			}
		})
	}
}
